# -*- coding: utf-8 -*-
"""Projet KickStarter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nHboWz2-d1KI0L9l_NsVlwyohwoXmVdC
"""



import pandas as pd

url = 'https://raw.githubusercontent.com/Maxime-Michel-1999/Tweets_Sentiment_Analysis/main/Kickstarter.csv'
df = pd.read_csv(url, index_col = 0)



# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns





# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

sns.set_theme()





df.head()

#sns.countplot(x="status", data=df);
#Utilisation d'un filtre pour uniquement les succès et sort de l'argent collecté
success = df.loc[(df["status"] == 'successful'),:].sort_values('usd_pledged', ascending=False)
#Utilisation d'un filtre pour les échoués et sort de l'argent collecté
failed = df.loc[(df["status"] == 'failed'),:].sort_values('usd_pledged', ascending=False)
# Les top 10 villes avec succès
plt.title(label='Les top 10 villes avec succès')
sns.barplot(x="city", y="usd_pledged", data=success.head(10))
plt.xticks(rotation=50);









# les pire 10 villes avec succès
plt.title(label='les pire 10 villes avec succès')
sns.barplot(x="city", y="usd_pledged", data=success.tail(10))
plt.xticks(rotation=50);















df.nunique()











# Les top 10 villes avec échec
plt.title(label='Les top 10 villes avec échec')
sns.barplot(x="city", y="usd_pledged", data=failed.head(10))
plt.xticks(rotation=50);





# Une courbe par modalité de la variable "status" basée sur la duré et les montants collectés
sns.relplot(x="duration", y="usd_pledged", kind="line",hue="status",ci=None, data=df[df['duration']<80] );







df.head()



plt.title(label='Les top 10 compagnies')
sns.barplot(x="name", y="usd_pledged",hue="main_category", data=success.head(10))
plt.xticks(rotation=90);



# Pour Mathilde 
city = df["city"]
usd_pledged = df["usd_pledged"]
plt.scatter(city, usd_pledged)
plt.xlabel("city")
plt.ylabel("usd_pledged")
plt.title("Levées de fonds par ville")
plt.xticks(rotation=90) 
plt.show()







df_sorted =  df.sort_values('usd_pledged', ascending=False)
df_sorted.head(25).plot.scatter("city", "usd_pledged", s=30)
plt.xticks(rotation=90);

top_cities = df.groupby('city').mean().sort_values('usd_pledged', ascending=False).head(10)

#Graphique à barres des dix premières villes
top_cities.plot(kind='bar', y='usd_pledged', figsize=(10, 6))
plt.title('Les 10 villes qui ont levé le plus de fonds en moyenne')
plt.xlabel('Ville')
plt.ylabel('Fonds levés (en millions de $USD)')
plt.show()

city_totals = df.groupby('city')['usd_pledged'].sum().reset_index()
city_totals.plot(x='city', y='usd_pledged', kind='bar')
plt.show()
city_totals = city_totals.sort_values('usd_pledged', ascending=False)
city_totals.plot(x='city', y='usd_pledged', kind='bar')
plt.show()

bins = [0, 1000, 10000, 50000, 100000, 500000, float('inf')]
labels = ['0-1k', '1k-10k', '10k-50k', '50k-100k', '100k-500k', '500k+']
df['funds_category'] = pd.cut(df['usd_pledged'], bins=bins, labels=labels)
city_funds = df.groupby(['city', 'usd_pledged']).size().unstack(fill_value=0)
city_amount_range = df.groupby(['city', 'uds_pledged']).size().reset_index(name='counts').head(10)
city_amount_range_pivot = city_amount_range.pivot(index='City', columns='usd_pledged', values='counts')
city_amount_range_pivot.plot.bar(stacked=True, figsize=(10,6))
plt.xlabel('City')
plt.ylabel('funds')
plt.show()

df_sorted =  df.sort_values('goal_usd', ascending=False)
df_sorted.plot.scatter("city", "goal_usd", s=30)
plt.xticks(rotation=90);





sub_category = df["sub_category"]
usd_pledged = df["usd_pledged"]
plt.scatter(sub_category, usd_pledged)
plt.xlabel("sub_category")
plt.ylabel("usd_pledged")
plt.title("Levées de fonds par secteur")
plt.show()



plt.title(label='Levées de fonds par secteur')
sns.barplot(x="sub_category", y="usd_pledged",hue="sub_category", data=success.head(10))
plt.xticks(rotation=90)



plt.title(label='Levées de fonds par secteur')
sns.barplot(x="sub_category", y="usd_pledged",hue="sub_category", data=success.head(10))
plt.xticks(rotation=90)

cor=df.corr()
fig, ax=plt.subplots(figsize=(12,12))
sns.heatmap(cor, annot=True, ax=ax, cmap="vlag");





sns.pairplot(df.iloc[:13], diag_kind="kde");



sns.relplot(x="backers_count",y="usd_pledged",hue="sub_category",style="sub_category",row="status",col="blurb_length",kind="line",height=4, data=df);

